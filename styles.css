.container{
    background-color: #eee;
    width: 1000px;
    margin: 30px auto;

    /* turning an element into a grid container */
    display: grid;
    grid-template-rows: 150px 150px;
    grid-template-columns: 150px 150px 150px;
    /* grid-row-gap: 30px; */
    row-gap: 30px;
    /* grid-column-gap: 30px; */
    column-gap: 30px;
    /* latest versions of css recommend using gap property instead of prefixing the word grid*/
    gap: 30px;/*shorthand for the row-gap and column-gap*/

    /* the repeat keyword*/
    grid-template-rows: repeat(2, 150px);/*creats two rows 150px each*/
    grid-template-columns: repeat(3, 150px);

    /* and what if for the colums we wanted the third colum to have 300px instead of 150 */
    /* grid-template-columns: repeat(2, 150px) 300px; */

    /* or what if we wante the last track/column to fill the remaining space */
    /* this is quite similar to the flex property which if we set to 1, will expand and occupy the remaining space */
    /* we use the FR unit */
    grid-template-columns: repeat(2, 150px) 1fr;
    /* fr means a fraction of, which means we can have 0.5 fr, 0.75fr etc */

    /* another important use for fr would be as shown */
    grid-template-columns: repeat(3, 1fr);
    /* this will generate three equal columns each of the same space*/
    /* grid-template-columns: 1fr 2fr 1fr; */
}
.item{
    padding: 20px;
    font-size: 30px;
    font-family: sans-serif;
    color: white;
}
.item--1{
    background-color: orangered;

    /* positioning a grid item where you want it to be */
    /* grid-cell: an area between two adjacent row and column lines */
    grid-row-start: 2;/*the number of the row line we want in which we want it to start*/
    grid-row-end: 3;/*the numbering of the row we want it to end*/
    grid-column-start: 2;/*the numbering of the column we want it to start*/
    grid-column-end: 3;/*the numbering of the column we want it to end*/

    /* there is actually a short hand for the above two pairs as shown below respectively */
    grid-row: 2/3;
    grid-column: 2/3;

    /* spanning: increasing the grid-row or column properties increases the amount of tracks it occupies i.e */
    /* grid-column: 2/4; */
}
.item--2{
    background-color: yellowgreen;
    /* spanning this one 2 columns */
    grid-column: 1/span 2;
    /* to make it go from where it is all the way to the end, we do this: */
    grid-column: 1/-1;
}
.item--3{
    background-color: blueviolet;
}
.item--4{
    background-color: palevioletred;
}
.item--5{
    background-color: royalblue;

    /* repositioning this one to*/
    grid-row: 1/2;
    grid-column: 3/4;

    /* there is even a greater short hand for repositioning */
    /* grid-area: rs/cs/re/ce; */
    /* rs-row start, re-row end, cs-colum start ce- column end*/
    grid-area: 1/3/2/4 ;
}
.item--6{
    background-color: goldenrod;

    /* repositioning this one to */
    grid-row: 1/2;
    grid-column: 2/3;
    /* grid-area: 1/2/2/3; */
}


/* grid challenge */
.container-test{
    background-color: #ccc;
    /* padding: .2rem; */
    width: 800px;
    margin: 30px auto;
    min-height: 30rem;
    box-shadow: 0 0 5px;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 15px;

    /* INSTRUCTOR'S SOLUTION */
    /* grid-template-columns: 100px 200px 400px 100px ; */
    /* header smallboxes maincontent footer */

    /* grid-template-columns: repeat(3, 1fr) 200px ; */
    /* gap: 30px; */
    /* sidebar will occupy 200px and the rest of the space will be divided between the 3 columns and the gutter of course */

}
.box{
    font-size: 1.5rem;
    font-weight:  bold; 
    color: white;
    background-color: red;
    padding: 20px;
}

/* the header which is box1 */
.box--1{
    /* same as the instructor's solution */
    grid-column: 1/-1;
}
/* the small boxes which can represent featured posts i.e box2, box3 and box4 */
.box--2, .box--3, .box--4{
    height: 80px;
}
/* the side bar which is box 5 */
.box--5{
    /* same as the instructor's solution */
    grid-column: 4/5;
    grid-row: 2/span 2;
}
/* the main content which is box 6 */
.box--6{
    /* same as */
    grid-column: 1 / span 3;
    height: 15rem;
}
/* the footer which is box7 */
.box--7{
    /* same as instructor's solution */
    grid-column: 1/-1;
}